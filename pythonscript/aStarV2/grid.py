import geopy
import geopy.distance
from geopy.distance import great_circle
import math
import numpy as np
# import inputs

# inclusionGeofence = [(28.75282483, 77.11612238),( 28.75310103, 77.11551856),( 28.75361659, 77.11535054),( 28.75419660, 77.11550806),(28.75446819, 77.11606463),(28.75424723, 77.11658444),(28.75369485, 77.11682072),(28.75310103, 77.11665795)]
# # Waypoints = [(28.75322071, 77.11571283),(28.75365342, 77.11552906),(28.75410914, 77.11569183),( 28.75412755, 77.11642167),(28.75370866, 77.11662645),(28.75366262, 77.11609088)]
# Waypoints = [(28.75323452, 77.11570758, 20),(28.75363961, 77.11551856, 15),(28.75409072, 77.11568133, 25),(28.75412295, 77.11642167, 25),( 28.75366262, 77.11663695, 30),(28.75365342, 77.11609613, 20),(28.75329437, 77.11634291, 15)]
# Obstacles = [(28.75345548, 77.11560257,10),(28.75392961, 77.11551856, 13),( 28.75411374, 77.11605413,20),(28.75342326, 77.11619589,5)]

# og inclusionGeofence = [(-35.36440871, 149.16300284),(-35.35866966, 149.16300284),(-35.35868279, 149.17071652),(-35.36442184, 149.17073262)]
# inclusionGeofence = [(-35.36089167, 149.16412627),(-35.35927632, 149.16475431),(-35.35964404, 149.16694438),(-35.35909245, 149.16852253),(-35.36136444, 149.16961757),(-35.36225746, 149.16414237)]
# inclusionGeofence = [(-35.36089167, 149.16412627),(-35.35997236, 149.16472210),(-35.35927632, 149.16475431),(-35.35964404, 149.16694438),(-35.35909245, 149.16852253),(-35.36136444, 149.16961757),(-35.36324240, 149.16961757),(-35.36292722, 149.16707321),(-35.36357071, 149.16522131),(-35.36225746, 149.16414237)]
# og Waypoints = [(-35.36087853, 149.16485093),(-35.35967031, 149.16522131),(-35.35952584, 149.16820046),(-35.36086540, 149.16878019),( -35.36267771, 149.16853863),(-35.36229686, 149.16522131)]
# og Obstacles = [(-35.36177156, 149.16868357, 50),(-35.36249385, 149.16681556, 75),(-35.36153517, 149.16504417, 45),(-35.36024816, 149.16816825, 50)]

# inclusionGeofence = [(-35.36461840, 149.16529349),(-35.36391463, 149.16637574),(-35.36450281, 149.16860482),(-35.36362437, 149.17046992),(-35.36539130, 149.17022104),(-35.36694329, 149.17079200),(-35.36763571, 149.16967937),(-35.36808936, 149.16907913),(-35.36755215, 149.16752729),(-35.36742083, 149.16546306),(-35.36547487, 149.16587298)]
# Waypoints = [(-35.36447777, 149.16628928),(-35.36430299, 149.16960173),(-35.36665464, 149.16966018),(-35.36757621, 149.16849109),(-35.36663875, 149.16739993),(-35.36603495, 149.16626980)]
# Obstacles = [(-35.36539937, 149.16960173, 50),(-35.36706776, 149.16913409, 40),(-35.36522459, 149.16628928, 55),(-35.36539937, 149.16800396, 70)]


#DTU mission
# inclusionGeofence = [(28.75302236, 77.11567778),(28.75438573, 77.11556041),(28.75428855, 77.11648958),(28.75303951, 77.11656130)]
# Waypoints = [(28.75319099, 77.11580167),(28.75425425, 77.11605271),(28.75317956, 77.11636243)]
# Obstacles = [(28.75368547, 77.11607227, )]
cellDimension = 10

def cornerCoordinates(a):
    lat=[]
    lon=[]
    for i in a:
        lat.append(i[0])
        lon.append(i[1])

    x1 = min(lat)
    y1 = min(lon)
    x2 = max(lat)
    y2 = max(lon)

    m = (x1,y1)
    n = (x2,y2)

    return m,n

def makeBoundary(a,b):        
    latitude1 = [a[0],0]
    latitude2 = [b[0],0]     
    avg = (a[0] + b[0])/2
    longitude1 = [avg,a[1]]
    longitude2 = [avg,b[1]]
    l = (great_circle(latitude1,latitude2).m)
    w = (great_circle(longitude1,longitude2).m)

    return l,w

def getDimensions(cd,l,w):
    r = l/cd
    c = w/cd
    if l%cd < cd/2:
        r=math.floor(r)
    else:
        r=math.ceil(r)
    if w%cd < cd/2:
        c=math.floor(c)
    else:
        c=math.ceil(c)

    return r,c

# minCorner, maxCorner = cornerCoordinates(inputs.inclusionGeofence)
# length, width = makeBoundary(minCorner,maxCorner)
# Rows, Columns = getDimensions(cellDimension,length,width)

# if __name__ == "__main__":
#     print("minCorner:","          ",minCorner)
#     print("maxCorner:","          ",maxCorner)
#     print("Rows:","               ",Rows)
#     print("Columns:","            ",Columns)